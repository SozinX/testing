CREATE DATABASE testing CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;

USE testing;

CREATE TABLE IF NOT EXISTS role (
id INT UNSIGNED NOT NULL AUTO_INCREMENT, 
role VARCHAR(30) NOT NULL,
CONSTRAINT pk_role PRIMARY KEY(id));

INSERT INTO role(role) VALUES("Student");
INSERT INTO role(role) VALUES("Teacher");
INSERT INTO role(role) VALUES("Confirmed teacher");

CREATE TABLE IF NOT EXISTS user(
id INT UNSIGNED NOT NULL AUTO_INCREMENT,
name VARCHAR(100) NOT NULL,
email VARCHAR(100) NOT NULL,
password VARCHAR(30) NOT NULL,
registration DATE NOT NULL,
role INT UNSIGNED NOT NULL,
CONSTRAINT pk_user PRIMARY KEY(id),
CONSTRAINT fk_role FOREIGN KEY(role) REFERENCES role(id),
CONSTRAINT uc_user UNIQUE (id, email));

INSERT INTO user VALUES(default, "For testing test", "testingtest125323734@gmail.com",  "1232131", "2022-01-01", "3");

CREATE TABLE IF NOT EXISTS level (
id INT UNSIGNED NOT NULL AUTO_INCREMENT, 
level VARCHAR(30) NOT NULL,
CONSTRAINT pk_level PRIMARY KEY(id));

INSERT INTO level(level) VALUES("Easy");
INSERT INTO level(level) VALUES("Medium");
INSERT INTO level(level) VALUES("Hard");

CREATE TABLE IF NOT EXISTS type (
id INT UNSIGNED NOT NULL AUTO_INCREMENT, 
type VARCHAR(30) NOT NULL,
CONSTRAINT pk_type PRIMARY KEY(id));

INSERT INTO type(type) VALUES("One answer");
INSERT INTO type(type) VALUES("Many answers");

CREATE TABLE IF NOT EXISTS test(
id INT UNSIGNED NOT NULL AUTO_INCREMENT,
name VARCHAR(100) NOT NULL,
subject VARCHAR(100) NOT NULL,
created DATE NOT NULL,
is_close INT NOT NULL,
time INT NOT NULL,
finished INT,
owner INT UNSIGNED NOT NULL,
level INT UNSIGNED NOT NULL,
CONSTRAINT pk_test PRIMARY KEY(id),
CONSTRAINT fk_owner FOREIGN KEY(owner) REFERENCES user(id),
CONSTRAINT fk_level FOREIGN KEY(level) REFERENCES level(id));

INSERT INTO test VALUES(default, "For test test", "For test subject", "2022-09-13", 1, 10, 0, 1, 1);

CREATE TABLE IF NOT EXISTS question(
id INT UNSIGNED NOT NULL AUTO_INCREMENT,
question VARCHAR(300) NOT NULL,
test INT UNSIGNED NOT NULL,
type INT UNSIGNED NOT NULL,
CONSTRAINT pk_question PRIMARY KEY(id),
CONSTRAINT fk_test FOREIGN KEY(test) REFERENCES test(id),
CONSTRAINT fk_type FOREIGN KEY(type) REFERENCES type(id));

INSERT INTO question VALUES(default, "ForAnswerQuestion", 1, 1);

CREATE TABLE IF NOT EXISTS answer(
id INT UNSIGNED NOT NULL AUTO_INCREMENT,
answer VARCHAR(300) NOT NULL,
correctness INT NOT NULL,
question INT UNSIGNED NOT NULL,
CONSTRAINT pk_answer PRIMARY KEY(id),
CONSTRAINT fk_question FOREIGN KEY(question) REFERENCES question(id));

CREATE TABLE IF NOT EXISTS log(
id INT UNSIGNED NOT NULL AUTO_INCREMENT,
user INT UNSIGNED NOT NULL,
test INT UNSIGNED NOT NULL,
question INT UNSIGNED NOT NULL,
answer INT UNSIGNED,
CONSTRAINT pk_log PRIMARY KEY(id),
CONSTRAINT fk_user FOREIGN KEY(user) REFERENCES user(id),
CONSTRAINT fk_test_log FOREIGN KEY(test) REFERENCES test(id),
CONSTRAINT fk_question_log FOREIGN KEY(question) REFERENCES question(id),
CONSTRAINT fk_answer_log FOREIGN KEY(answer) REFERENCES answer(id));

CREATE TABLE IF NOT EXISTS result(
id INT UNSIGNED NOT NULL AUTO_INCREMENT,
date DATE NOT NULL,
result INT NOT NULL,
user INT UNSIGNED NOT NULL,
test INT UNSIGNED NOT NULL,
CONSTRAINT pk_result PRIMARY KEY(id),
CONSTRAINT fk_test_result FOREIGN KEY(test) REFERENCES test(id),
CONSTRAINT fk_user_result FOREIGN KEY(user) REFERENCES user(id));

CREATE TABLE IF NOT EXISTS block(
id INT UNSIGNED NOT NULL AUTO_INCREMENT,
teacher INT UNSIGNED NOT NULL,
student INT UNSIGNED NOT NULL,
block DATE NOT NULL,
unblock DATE,
CONSTRAINT pk_log PRIMARY KEY(id),
CONSTRAINT fk_student FOREIGN KEY(student) REFERENCES user(id),
CONSTRAINT fk_teacher FOREIGN KEY(teacher) REFERENCES user(id));
